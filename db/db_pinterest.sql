DROP DATABASE IF EXISTS db_pinterest;
CREATE DATABASE IF NOT EXISTS db_pinterest;

use db_pinterest;

CREATE TABLE users(
	id INT PRIMARY KEY AUTO_INCREMENT,
	full_name varchar(255) NOT NULL,
	email varchar(255) NOT NULL,
	password varchar(255),
	age INT,
	avatar VARCHAR(255),
	introduction varchar(255),
	web_link varchar(255),
	display_name varchar(255),

	created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
	updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);

CREATE TABLE images(
	id INT PRIMARY KEY AUTO_INCREMENT,
	name VARCHAR(255) not NULL,
	user_id int,
	url VARCHAR(255),
	description VARCHAR(255),
	title VARCHAR(255),
	
	FOREIGN KEY (user_id) REFERENCES users(id),
	
	created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
	updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);

CREATE TABLE comments(
	id INT PRIMARY KEY AUTO_INCREMENT,
	content varchar(255) NOT NULL,
	user_id INT,
	image_id INT,
	comment_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
	
	FOREIGN KEY (user_id) REFERENCES users(id),
	FOREIGN KEY (image_id) REFERENCES images(id),
	
	created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
	updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);



CREATE TABLE saved_images(
	user_id INT NOT NULL,
	image_id INT NOT null,
	save_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
	
	PRIMARY KEY (user_id, image_id),
		FOREIGN KEY (user_id) REFERENCES users(id),
	FOREIGN KEY (image_id) REFERENCES images(id),
	
	created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
	updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);