generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model comments {
  id           Int       @id @default(autoincrement())
  content      String    @db.VarChar(255)
  user_id      Int?
  image_id     Int?
  comment_date DateTime? @default(now()) @db.Timestamp(0)
  created_at   DateTime? @default(now()) @db.Timestamp(0)
  updated_at   DateTime? @default(now()) @db.Timestamp(0)
  users        users?    @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "comments_ibfk_1")
  images       images?   @relation(fields: [image_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "comments_ibfk_2")

  @@index([image_id], map: "image_id")
  @@index([user_id], map: "user_id")
}

model images {
  id           Int            @id @default(autoincrement())
  name         String         @db.VarChar(255)
  user_id      Int?
  url          String?        @db.VarChar(255)
  link         String?        @db.VarChar(255)
  description  String?        @db.VarChar(255)
  title        String?        @db.VarChar(255)
  created_at   DateTime?      @default(now()) @db.Timestamp(0)
  updated_at   DateTime?      @default(now()) @db.Timestamp(0)
  comments     comments[]
  users        users?         @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "images_ibfk_1")
  saved_images saved_images[]

  @@index([user_id], map: "user_id")
}

model saved_images {
  user_id    Int
  image_id   Int
  save_date  DateTime? @default(now()) @db.Timestamp(0)
  created_at DateTime? @default(now()) @db.Timestamp(0)
  updated_at DateTime? @default(now()) @db.Timestamp(0)
  users      users     @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "saved_images_ibfk_1")
  images     images    @relation(fields: [image_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "saved_images_ibfk_2")

  @@id([user_id, image_id])
  @@index([image_id], map: "image_id")
}

model users {
  id           Int            @id @default(autoincrement())
  full_name    String         @db.VarChar(255)
  email        String         @db.VarChar(255)
  password     String?        @db.VarChar(255)
  age          Int?
  avatar       String?        @db.VarChar(255)
  introduction String?        @db.VarChar(255)
  web_link     String?        @db.VarChar(255)
  display_name String?        @db.VarChar(255)
  created_at   DateTime?      @default(now()) @db.Timestamp(0)
  updated_at   DateTime?      @default(now()) @db.Timestamp(0)
  comments     comments[]
  images       images[]
  saved_images saved_images[]
}
